//v1[1] = inputsVector[0]
assignInputsVector inputsVector = [x1,x2,x3,y1,y2,y3];
resetMv v1[32];
setMv v1[1,2] = inputsVector[0,3];

//v1[2] = inputsVector[3]

//v2[1] = inputsVector[1]
resetMv v2[32];
setMv v2[1,2] = inputsVector[1,4];

//v2[2] = inputsVector[4]

//v3[1] = inputsVector[2]
resetMv v3[32];
setMv v3[1,2] = inputsVector[2,5];

//v3[2] = inputsVector[5]

//p1[1] = v1[1]
resetMv p1[32];
setMv p1[1,2] = v1[1,2];

//p1[2] = v1[2]

//p1[4] = ((0.5 * v1[1]) * v1[1]) + ((0.5 * v1[2]) * v1[2])
setVector ve0 = {0.5,0.5};
setVector ve1 = {v1[1,2]};
setVector ve2 = {v1[1,2]};
dotVectors p1[4] = <ve0,ve1,ve2>;

//p1[5] = 1.0
assignMv p1[5] = [1.0];

//p1[17] = ((0.5 * v1[1]) * v1[2]) + (-((0.5 * v1[2]) * v1[1]))
setVector ve3 = {0.5,-0.5};
setVector ve4 = {v1[1,2]};
setVector ve5 = {v1[2,1]};
dotVectors p1[17] = <ve3,ve4,ve5>;

//p2[1] = v2[1]
resetMv p2[32];
setMv p2[1,2] = v2[1,2];

//p2[2] = v2[2]

//p2[4] = ((0.5 * v2[1]) * v2[1]) + ((0.5 * v2[2]) * v2[2])
setVector ve6 = {0.5,0.5};
setVector ve7 = {v2[1,2]};
setVector ve8 = {v2[1,2]};
dotVectors p2[4] = <ve6,ve7,ve8>;

//p2[5] = 1.0
assignMv p2[5] = [1.0];

//p2[17] = ((0.5 * v2[1]) * v2[2]) + (-((0.5 * v2[2]) * v2[1]))
setVector ve9 = {0.5,-0.5};
setVector ve10 = {v2[1,2]};
setVector ve11 = {v2[2,1]};
dotVectors p2[17] = <ve9,ve10,ve11>;

//p3[1] = v3[1]
resetMv p3[32];
setMv p3[1,2] = v3[1,2];

//p3[2] = v3[2]

//p3[4] = ((0.5 * v3[1]) * v3[1]) + ((0.5 * v3[2]) * v3[2])
setVector ve12 = {0.5,0.5};
setVector ve13 = {v3[1,2]};
setVector ve14 = {v3[1,2]};
dotVectors p3[4] = <ve12,ve13,ve14>;

//p3[5] = 1.0
assignMv p3[5] = [1.0];

//p3[17] = ((0.5 * v3[1]) * v3[2]) + (-((0.5 * v3[2]) * v3[1]))
setVector ve15 = {0.5,-0.5};
setVector ve16 = {v3[1,2]};
setVector ve17 = {v3[2,1]};
dotVectors p3[17] = <ve15,ve16,ve17>;

//c[7] = (((p1[2] * p2[4]) + (-(p1[4] * p2[2]))) + (-((p1[2] + (-(p2[2]))) * p3[4]))) + ((p1[4] + (-(p2[4]))) * p3[2])
resetMv c[32];
resetMv tempmv18[1];
resetMv tempmv19[1];
setVector ve20 = {p1[2],p2[-2]};
dotVectors tempmv19[0] = <ve20>;
setMv tempmv18[0] = tempmv19[-0];
resetMv tempmv21[1];
setVector ve22 = {p1[4],p2[-4]};
dotVectors tempmv21[0] = <ve22>;
setVector ve23 = {p1[2,-4],tempmv18[0],tempmv21[0]};
setVector ve24 = {p2[4,2],p3[4,2]};
dotVectors c[7] = <ve23,ve24>;

//c[10] = -((((p1[1] * p2[4]) + (-(p1[4] * p2[1]))) + (-((p1[1] + (-(p2[1]))) * p3[4]))) + ((p1[4] + (-(p2[4]))) * p3[1]))
resetMv tempmv25[1];
resetMv tempmv26[1];
setVector ve27 = {p1[1],p2[-1]};
dotVectors tempmv26[0] = <ve27>;
setMv tempmv25[0] = tempmv26[-0];
resetMv tempmv28[1];
setVector ve29 = {p1[4],p2[-4]};
dotVectors tempmv28[0] = <ve29>;
resetMv tempmv30[1];
setVector ve31 = {p1[1,-4],tempmv25[0],tempmv28[0]};
setVector ve32 = {p2[4,1],p3[4,1]};
dotVectors tempmv30[0] = <ve31,ve32>;
setMv c[10] = tempmv30[-0];

//c[13] = -(((((p1[1] * p2[2]) + (-(p1[2] * p2[1]))) * p3[4]) + (-(((p1[1] * p2[4]) + (-(p1[4] * p2[1]))) * p3[2]))) + (((p1[2] * p2[4]) + (-(p1[4] * p2[2]))) * p3[1]))
resetMv tempmv33[1];
setVector ve34 = {p1[1,-2]};
setVector ve35 = {p2[2,1]};
dotVectors tempmv33[0] = <ve34,ve35>;
resetMv tempmv36[1];
resetMv tempmv37[1];
setVector ve38 = {p1[1,-4]};
setVector ve39 = {p2[4,1]};
dotVectors tempmv37[0] = <ve38,ve39>;
setMv tempmv36[0] = tempmv37[-0];
resetMv tempmv40[1];
setVector ve41 = {p1[2,-4]};
setVector ve42 = {p2[4,2]};
dotVectors tempmv40[0] = <ve41,ve42>;
resetMv tempmv43[1];
setVector ve44 = {tempmv33[0],tempmv36[0],tempmv40[0]};
setVector ve45 = {p3[4,2,1]};
dotVectors tempmv43[0] = <ve44,ve45>;
setMv c[13] = tempmv43[-0];

//c[14] = (((p1[1] * p2[2]) + (-(p1[2] * p2[1]))) + (-((p1[1] + (-(p2[1]))) * p3[2]))) + ((p1[2] + (-(p2[2]))) * p3[1])
resetMv tempmv46[1];
resetMv tempmv47[1];
setVector ve48 = {p1[1],p2[-1]};
dotVectors tempmv47[0] = <ve48>;
setMv tempmv46[0] = tempmv47[-0];
resetMv tempmv49[1];
setVector ve50 = {p1[2],p2[-2]};
dotVectors tempmv49[0] = <ve50>;
setVector ve51 = {p1[1,-2],tempmv46[0],tempmv49[0]};
setVector ve52 = {p2[2,1],p3[2,1]};
dotVectors c[14] = <ve51,ve52>;

//ma[1] = (-((-(c[14])) * c[7])) + (c[7] * c[14])
resetMv ma[32];
setVector ve53 = {c[14,7]};
setVector ve54 = {c[7,14]};
dotVectors ma[1] = <ve53,ve54>;

//ma[2] = (-((-(c[14])) * c[10])) + (c[10] * c[14])
setVector ve55 = {c[14,10]};
setVector ve56 = {c[10,14]};
dotVectors ma[2] = <ve55,ve56>;

//ma[4] = ((((-(c[14])) * c[13]) + (-(c[7] * c[7]))) + (-(c[10] * c[10]))) + (-((-(c[14])) * c[13]))
setVector ve57 = {c[-14,-7,-10,14]};
setVector ve58 = {c[13,7,10,13]};
dotVectors ma[4] = <ve57,ve58>;

//ma[5] = ((-(c[14])) * c[14]) + ((-(c[14])) * c[14])
setVector ve59 = {c[-14,-14]};
setVector ve60 = {c[14,14]};
dotVectors ma[5] = <ve59,ve60>;

//ma[17] = (-(c[7] * c[10])) + (c[10] * c[7])
setVector ve61 = {c[-7,10]};
setVector ve62 = {c[10,7]};
dotVectors ma[17] = <ve61,ve62>;

//ma[21] = (-(c[7] * c[14])) + (-((-(c[14])) * c[7]))
setVector ve63 = {c[-7,14]};
setVector ve64 = {c[14,7]};
dotVectors ma[21] = <ve63,ve64>;

//ma[24] = (-(c[10] * c[14])) + (-((-(c[14])) * c[10]))
setVector ve65 = {c[-10,14]};
setVector ve66 = {c[14,10]};
dotVectors ma[24] = <ve65,ve66>;

//m[1] = ((-(ma[1])) * ((-(ma[5])) / ((-(ma[5])) * (-(ma[5]))))) + ((-(ma[5])) * (ma[21] / ((-(ma[5])) * (-(ma[5])))))
resetMv m[32];
resetMv tempmv67[1];
resetMv tempmv68[1];
setVector ve69 = {ma[-5]};
setVector ve70 = {ma[-5]};
dotVectors tempmv68[0] = <ve69,ve70>;
resetMv tempmv71[1];
setMv tempmv71[0] = ma[-5];
resetMv tempmv72[1];
setMv tempmv72[0] = tempmv68[0];
calculateMvCoeff tempmv67[0] = DIVISION(tempmv71,tempmv72);
resetMv tempmv73[1];
resetMv tempmv74[1];
setVector ve75 = {ma[-5]};
setVector ve76 = {ma[-5]};
dotVectors tempmv74[0] = <ve75,ve76>;
resetMv tempmv77[1];
setMv tempmv77[0] = ma[21];
resetMv tempmv78[1];
setMv tempmv78[0] = tempmv74[0];
calculateMvCoeff tempmv73[0] = DIVISION(tempmv77,tempmv78);
setVector ve79 = {ma[-1,-5]};
setVector ve80 = {tempmv67[0],tempmv73[0]};
dotVectors m[1] = <ve79,ve80>;

//m[2] = ((-(ma[2])) * ((-(ma[5])) / ((-(ma[5])) * (-(ma[5]))))) + ((-(ma[5])) * (ma[24] / ((-(ma[5])) * (-(ma[5])))))
resetMv tempmv81[1];
resetMv tempmv82[1];
setVector ve83 = {ma[-5]};
setVector ve84 = {ma[-5]};
dotVectors tempmv82[0] = <ve83,ve84>;
resetMv tempmv85[1];
setMv tempmv85[0] = ma[-5];
resetMv tempmv86[1];
setMv tempmv86[0] = tempmv82[0];
calculateMvCoeff tempmv81[0] = DIVISION(tempmv85,tempmv86);
resetMv tempmv87[1];
resetMv tempmv88[1];
setVector ve89 = {ma[-5]};
setVector ve90 = {ma[-5]};
dotVectors tempmv88[0] = <ve89,ve90>;
resetMv tempmv91[1];
setMv tempmv91[0] = ma[24];
resetMv tempmv92[1];
setMv tempmv92[0] = tempmv88[0];
calculateMvCoeff tempmv87[0] = DIVISION(tempmv91,tempmv92);
setVector ve93 = {ma[-2,-5]};
setVector ve94 = {tempmv81[0],tempmv87[0]};
dotVectors m[2] = <ve93,ve94>;

//m[4] = (((((-(ma[1])) * (ma[21] / ((-(ma[5])) * (-(ma[5]))))) + ((-(ma[2])) * (ma[24] / ((-(ma[5])) * (-(ma[5])))))) + ((-(ma[4])) * ((-(ma[5])) / ((-(ma[5])) * (-(ma[5])))))) + (-((-(ma[21])) * (ma[21] / ((-(ma[5])) * (-(ma[5]))))))) + (-((-(ma[24])) * (ma[24] / ((-(ma[5])) * (-(ma[5]))))))
resetMv tempmv95[1];
resetMv tempmv96[1];
setVector ve97 = {ma[-5]};
setVector ve98 = {ma[-5]};
dotVectors tempmv96[0] = <ve97,ve98>;
resetMv tempmv99[1];
setMv tempmv99[0] = ma[21];
resetMv tempmv100[1];
setMv tempmv100[0] = tempmv96[0];
calculateMvCoeff tempmv95[0] = DIVISION(tempmv99,tempmv100);
resetMv tempmv101[1];
resetMv tempmv102[1];
setVector ve103 = {ma[-5]};
setVector ve104 = {ma[-5]};
dotVectors tempmv102[0] = <ve103,ve104>;
resetMv tempmv105[1];
setMv tempmv105[0] = ma[24];
resetMv tempmv106[1];
setMv tempmv106[0] = tempmv102[0];
calculateMvCoeff tempmv101[0] = DIVISION(tempmv105,tempmv106);
resetMv tempmv107[1];
resetMv tempmv108[1];
setVector ve109 = {ma[-5]};
setVector ve110 = {ma[-5]};
dotVectors tempmv108[0] = <ve109,ve110>;
resetMv tempmv111[1];
setMv tempmv111[0] = ma[-5];
resetMv tempmv112[1];
setMv tempmv112[0] = tempmv108[0];
calculateMvCoeff tempmv107[0] = DIVISION(tempmv111,tempmv112);
resetMv tempmv113[1];
resetMv tempmv114[1];
setVector ve115 = {ma[-5]};
setVector ve116 = {ma[-5]};
dotVectors tempmv114[0] = <ve115,ve116>;
resetMv tempmv117[1];
setMv tempmv117[0] = ma[21];
resetMv tempmv118[1];
setMv tempmv118[0] = tempmv114[0];
calculateMvCoeff tempmv113[0] = DIVISION(tempmv117,tempmv118);
resetMv tempmv119[1];
resetMv tempmv120[1];
setVector ve121 = {ma[-5]};
setVector ve122 = {ma[-5]};
dotVectors tempmv120[0] = <ve121,ve122>;
resetMv tempmv123[1];
setMv tempmv123[0] = ma[24];
resetMv tempmv124[1];
setMv tempmv124[0] = tempmv120[0];
calculateMvCoeff tempmv119[0] = DIVISION(tempmv123,tempmv124);
setVector ve125 = {ma[-1,-2,-4,21,24]};
setVector ve126 = {tempmv95[0],tempmv101[0],tempmv107[0],tempmv113[0],tempmv119[0]};
dotVectors m[4] = <ve125,ve126>;

//m[5] = (-(ma[5])) * ((-(ma[5])) / ((-(ma[5])) * (-(ma[5]))))
resetMv tempmv127[1];
resetMv tempmv128[1];
setVector ve129 = {ma[-5]};
setVector ve130 = {ma[-5]};
dotVectors tempmv128[0] = <ve129,ve130>;
resetMv tempmv131[1];
setMv tempmv131[0] = ma[-5];
resetMv tempmv132[1];
setMv tempmv132[0] = tempmv128[0];
calculateMvCoeff tempmv127[0] = DIVISION(tempmv131,tempmv132);
setVector ve133 = {ma[-5]};
setVector ve134 = {tempmv127[0]};
dotVectors m[5] = <ve133,ve134>;

//temp0[0] = ((((-(c[7] * c[7])) + (-(c[10] * c[10]))) + (c[13] * c[14])) + (c[14] * c[13])) * ((c[14] * c[14]) / ((c[14] * c[14]) * (c[14] * c[14])))
resetMv temp0[32];
resetMv tempmv135[1];
resetMv tempmv136[1];
setVector ve137 = {c[14]};
setVector ve138 = {c[14]};
dotVectors tempmv136[0] = <ve137,ve138>;
resetMv tempmv139[1];
setVector ve140 = {c[14]};
setVector ve141 = {c[14]};
setVector ve142 = {c[14]};
setVector ve143 = {c[14]};
dotVectors tempmv139[0] = <ve140,ve141,ve142,ve143>;
resetMv tempmv144[1];
setMv tempmv144[0] = tempmv136[0];
resetMv tempmv145[1];
setMv tempmv145[0] = tempmv139[0];
calculateMvCoeff tempmv135[0] = DIVISION(tempmv144,tempmv145);
resetMv tempmv146[1];
setVector ve147 = {c[-7,-10,13,14]};
setVector ve148 = {c[7,10,14,13]};
dotVectors tempmv146[0] = <ve147,ve148>;
setVector ve149 = {tempmv135[0]};
setVector ve150 = {tempmv146[0]};
dotVectors temp0[0] = <ve149,ve150>;

//temp1 = abs(temp0)
resetMv temp1[32];
calculateMv temp1 = ABS(temp0);

//r = sqrt(temp1)
resetMv r[32];
calculateMv r = SQRT(temp1);

